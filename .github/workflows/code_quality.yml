name: Code Quality Check

on:
  push:
    branches:
      - integration  
  pull_request:
    branches:
      - integration

jobs:
  pycodestyle_check:
    name: Pycodestyle Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pycodestyle

    - name: Run pycodestyle
      run: find . -name "*.py" -exec pycodestyle --max-line-length=120 {} +

  flake8_check:
    name: Flake8 Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run flake8
      run: flake8 . --max-line-length=120

  pylint_check:
    name: Pylint Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Run pylint
      run: pylint . --max-line-length=120 --disable="C0103,C0114,C0115,R1735,W2402"

  docker_lint:
    name: Dockerfile Lint Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download hadolint
      run: |
        curl -sL https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 -o hadolint
        chmod +x hadolint

    - name: Find and lint all Dockerfiles
      run: find . -name "Dockerfile" -exec ./hadolint {} +

  shell_lint:
    name: Shell Script Lint Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Run ShellCheck on all shell scripts
      run: |
        find . -name "*.sh" | while read -r file; do
          docker run --rm -v ${{ github.workspace }}:/mnt koalaman/shellcheck:stable /mnt/"$file";
        done
